#!/bin/bash

# Verificar se o diretório atual é um repositório Git
function is_git_repo {
    git rev-parse --is-inside-work-tree &>/dev/null
    return $?
}

# Obter o nome da branch atual
function get_branch_name {
    git rev-parse --abbrev-ref HEAD
}

# Extrair o número da task da branch
function extract_ticket_number {
    local branch_name="$1"
    
    if [[ "$branch_name" =~ ^[a-z]+/([0-9]+)- ]]; then
        local ticket_number="${BASH_REMATCH[1]}"
        echo "$ticket_number"
    else
        echo "Erro: Nome de branch fora do padrão esperado." >&2
        exit 1
    fi
}

# Formatar a mensagem de commit
function format_commit_message {
    local commit_type=$1
    local ticket_number=$2
    local description=$3
    local emoji=""

    case "$commit_type" in
        feat)
            emoji=":sparkles:"
            ;;
        fix)
            emoji=":bug:"
            ;;
        chore)
            emoji=":wrench:"
            ;;
        test)
            emoji=":heavy_check_mark:"
            ;;
        docs)
            emoji=":books:"
            ;;
        style)
            emoji=":lipstick:"
            ;;
        *)
            echo "Erro: Tipo de commit inválido. Use: feat, fix, chore, test, docs." >&2
            exit 1
            ;;
    esac

    echo "$commit_type($ticket_number): $emoji $description"
}

# Verificar se está em um repositório Git
if ! is_git_repo; then
    echo "Este comando deve ser executado em um repositório Git."
    exit 1
fi

# Obter nome da branch atual
branch_name=$(get_branch_name)

# Extrair número da task da branch
ticket_number=$(extract_ticket_number "$branch_name")

# Solicitar tipo de commit e descrição do commit
read -p "Digite o tipo do commit (feat, fix, chore, test, docs, style): " commit_type
read -p "Digite a descrição do commit: " description

# Formatar a mensagem de commit
commit_message=$(format_commit_message "$commit_type" "$ticket_number" "$description")
echo "Mensagem de commit gerada para a branch '$branch_name':"
echo "$commit_message"

# Confirmar se deseja realizar o commit
read -p "Deseja realizar o commit com essa mensagem? (y/n): " confirm

if [[ "$confirm" == "y" ]]; then
    git commit -m "$commit_message"
else
    echo "Commit abortado."
fi

